module BourseCorba
{
	exception ServerException
		{
		  string reason;
		};

	struct ActionMontant { 
		string libelleTitre ;
		long idAction ;
		double montant ;
	} ;
	typedef sequence<ActionMontant> ListeActionMontant;
	
	interface Historique {
		attribute double valeur ;
		attribute string dateHistorique ;
	} ;
	typedef sequence<Historique> ListeHistoriques;
	
	struct Titre { 
		string libelle ;
		long id ;
		double cours ;
	} ;
	typedef sequence<Titre> ListeTitres;
	struct TitreDetaille {
		string libelle ;
		long id ;
		string dateIntroduction ;
		double coursIntrodution ;
		double coursLePlusHaut ;
		double coursLePlusBas ;
		ListeHistoriques histo ; 
	} ;
	
	interface ClientAlarme {	
		void notifie (in long idTitre, in double nouveauCours) ;
	} ;

	struct Alarme {
		short type ;
		double seuil ;
		long idTitre ;
	};
	typedef sequence<Alarme> ListeAlarmes;
	
	interface Compte
    {
    	// retourne la liste des titres disponibles a l'achat
    	ListeTitres getTitres () ;
    	TitreDetaille getTitre (in long id) raises (ServerException);
    	double getMontantPortefeuille () ;
    	ListeActionMontant getActionsAvecMontant () ;
    	// retourne l'id de l'action achetee a partir du titre
    	long acheterAction(in long idTitre) raises (ServerException);
    	void vendreAction (in long idAction) raises (ServerException);
    	void positionnerAlarme (in Alarme a) ;
        void enregistrerClientAlarme (in ClientAlarme ca) ;
        ListeAlarmes getAlarmes () ;
    	double cash () ;
    };
    
    struct CompteAdmin 
    {
    	string nom ;
    	string id ;
    	double cash ;
    };
	typedef sequence<CompteAdmin> ListeCompteAdmin;
	
	interface Admin
	{		
		// retourne l identifiant de l utilisateur
		long insererUtilisateur(in string nom, in string prenom, in string login, in string mdp, in long role) raises (ServerException);
		
		// retourne l identifiant du compte
		long creerCompte(in double cash) ;
		
		void affecterCompte(in long idUser, in long idCompte) raises (ServerException);
		
		ListeCompteAdmin getComptes () ;
		
		void ajoutCash (in long idCompte, in double valeur) raises (ServerException);
		void diminuerCash(in long idCompte, in double valeur) raises (ServerException);
		
	};

	interface ServiceWeb {
		long creerTitre (in string libelle, in double coursIntro) ;
		void majCoursAction (in long idTitre, in double nouveauCours);
	};
	
	interface Bourse {
		
		ServiceWeb getServiceWeb () raises (ServerException);
		
		Compte connectUser(in string login, in string mdp) raises (ServerException);
		
		Admin connectAdmin(in string login, in string mdp) raises (ServerException);
		
	};
	

	
	
};