/*
 * UserFrame.java
 *
 * Created on 20 mai 2008, 18:43
 */

package ihm.user;

import BourseCorba.ActionMontant;
import BourseCorba.Alarme;
import BourseCorba.ClientAlarme;
import BourseCorba.Compte;
import BourseCorba.ServerException;
import BourseCorba.Titre;
import ihm.utils.Connexion;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.omg.CORBA.Context;
import org.omg.CORBA.ContextList;
import org.omg.CORBA.DomainManager;
import org.omg.CORBA.ExceptionList;
import org.omg.CORBA.NVList;
import org.omg.CORBA.NamedValue;
import org.omg.CORBA.Policy;
import org.omg.CORBA.Request;
import org.omg.CORBA.SetOverrideType;


/**
 *
 * @author  faure
 */
public class UserFrame extends javax.swing.JInternalFrame implements ClientAlarme {
    JFrame owner = null ;
    Compte compteRef = null ;
    /** Creates new form UserFrame */
    private UserFrame() {
        initComponents();
    }

    public UserFrame(JFrame aThis, Compte compteRef) {
         initComponents();
         owner = aThis ;
         this.compteRef = compteRef ;
         initAll () ;
         
    }

    private void initActions() {
        ActionMontant[] montants = compteRef.getActionsAvecMontant() ;
        Object[][] model = new Object[montants.length][3] ;
        for (int i = 0 ; i < montants.length ; i ++){
            model[i][0] = montants[i].idAction ;
            model[i][1] = montants[i].libelleTitre ;
            model[i][2] = montants[i].montant ;
        }
        actions.setModel(new TitresModel(model, new String[]{"id Action","libelle","cours"} ));
    }

    private void initAll() {
        initTitre();
        initActions();
        majCash();
        majPortefeuille();
        majAlarmes () ;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cash = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        portefeuille = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        titreTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        actions = new javax.swing.JTable();
        jToggleButton1 = new javax.swing.JToggleButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        alarmestable = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Utilisateur");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Montants"));

        cash.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        cash.setBorder(new javax.swing.border.MatteBorder(null));

        jLabel1.setText("cash disponible : ");

        jLabel3.setText("Total Portefeuille : ");

        portefeuille.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        portefeuille.setBorder(new javax.swing.border.MatteBorder(null));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cash, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(portefeuille, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(157, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(portefeuille, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(cash, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Titres"));

        titreTable.setModel(new TitresModel(new Object[][]{}, new String[]{"id","libelle","cours"} ));
        jScrollPane1.setViewportView(titreTable);

        jButton1.setText("Acheter");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("DÃ©tail");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setText("nouvelle Alarme");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addContainerGap(162, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Bourse", jPanel2);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Actions disponibles"));

        actions.setModel(new TitresModel(new Object[][]{}, new String[]{"id Action","libelle","cours"} ));
        jScrollPane2.setViewportView(actions);

        jToggleButton1.setText("vendre");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToggleButton1)
                .addContainerGap(126, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToggleButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Portefeuille", jPanel3);

        alarmestable.setModel(new AlarmesModel(new Object[][]{}, new String[]{"titre","type","seuil"} ));
        jScrollPane3.setViewportView(alarmestable);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(269, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Alarmes", jPanel4);

        jButton3.setText("Rafraichir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 619, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
    // code for : dÃ©tail
    if (titreTable.getSelectedRow() != -1){
        TitresModel model = (TitresModel) titreTable.getModel() ;
        int id = model.getId(titreTable.getSelectedRow());   
        PopUpDetailledTitle dialog = new PopUpDetailledTitle(owner, true, id, compteRef);
        dialog.show();
    }
    else {
       JOptionPane.showMessageDialog(owner,"Vous n'avez pas sÃ©lectionner de titre", "Warning", JOptionPane.WARNING_MESSAGE); 
    }
}//GEN-LAST:event_jButton2ActionPerformed

private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
    initAll();
}//GEN-LAST:event_jButton3ActionPerformed

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
     if (titreTable.getSelectedRow() != -1){
        
            TitresModel model = (TitresModel) titreTable.getModel();
            final int id = model.getId(titreTable.getSelectedRow());
            String nbActions = JOptionPane.showInputDialog("Combien d'actions voulez vous acheter ?");
            final int nb = Integer.valueOf(nbActions);
            new Thread(new Runnable() {
                public void run() {
                    for (int i = 0 ; i < nb ; i++){
                        try {
                            compteRef.acheterAction(id);
                        } catch (ServerException ex) {
                            Logger.getLogger(UserFrame.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                    initAll();
                }
             }).start();
       
    }
    else {
       JOptionPane.showMessageDialog(owner,"Vous n'avez pas sÃ©lectionner de titre", "Warning", JOptionPane.WARNING_MESSAGE); 
    }
    
}//GEN-LAST:event_jButton1ActionPerformed

private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
     if (actions.getSelectedRow() != -1){
            final TitresModel model = (TitresModel) actions.getModel();
            new Thread(new Runnable() {
                public void run() {
                    for (int i = 0 ; i < actions.getSelectedRowCount() ; i++){
                        try {
                            compteRef.vendreAction(actions.getSelectedRows()[i]);
                        } catch (ServerException ex) {
                            Logger.getLogger(UserFrame.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                    initAll();
                }
             }).start();
       
    }
    else {
       JOptionPane.showMessageDialog(owner,"Vous n'avez pas sÃ©lectionner d'actions", "Warning", JOptionPane.WARNING_MESSAGE); 
    }
}//GEN-LAST:event_jToggleButton1ActionPerformed

private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
    if (titreTable.getSelectedRow() != -1){
         TitresModel model = (TitresModel) titreTable.getModel();
         final int id = model.getId(titreTable.getSelectedRow());
         PopUpSetAlarm alarm = new PopUpSetAlarm(owner, true, compteRef, id);
         if (alarm.showSetAlarm() == Connexion.status.OK){
             Alarme a = new Alarme() ;
             a.seuil = alarm.getSeuil();
             a.idTitre = id ;
             a.type = (short) alarm.getType();
             compteRef.positionnerAlarme(a);
             compteRef.enregistrerClientAlarme(this);
             initAll();
         }
    }
    else {
       JOptionPane.showMessageDialog(owner,"Vous n'avez pas sÃ©lectionner de titre", "Warning", JOptionPane.WARNING_MESSAGE); 
    }
}//GEN-LAST:event_jButton4ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable actions;
    private javax.swing.JTable alarmestable;
    private javax.swing.JLabel cash;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JLabel portefeuille;
    private javax.swing.JTable titreTable;
    // End of variables declaration//GEN-END:variables
    private void initTitre() {
        Titre[] titres = compteRef.getTitres();
        Object[][] model = new Object[titres.length][3] ;
        for (int i = 0 ; i < titres.length ; i ++){
            model[i][0] = titres[i].id ;
            model[i][1] = titres[i].libelle ;
            model[i][2] = titres[i].cours ;
        }
        titreTable.setModel(new TitresModel(model, new String[]{"id","libelle","cours"} ));
    }

    private void majAlarmes() {
        Alarme[] alarmes = compteRef.getAlarmes();
        Object[][] model = new Object[alarmes.length][3] ;
        for (int i = 0 ; i < alarmes.length ; i ++){
            try {
                model[i][0] = compteRef.getTitre(alarmes[i].idTitre).libelle;
                if (alarmes[i].type == 1){
                    model[i][1] = "INF" ;    
                }
                else {
                    model[i][1] = "SUP" ;    
                }
                
                model[i][2] = alarmes[i].seuil ;
                alarmestable.setModel(new AlarmesModel(model, new String[]{"titre","type","seuil"} ));
            } catch (ServerException ex) {
                Logger.getLogger(UserFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    
    private void majCash () {
        Double d = compteRef.cash() ;
        int val = (int)(d * 100) ;
        double res = val / 100 ;
        cash.setText(String.valueOf(res));
    }
    
    private void majPortefeuille () {
        Double d = compteRef.getMontantPortefeuille() ;
        int val = (int)(d * 100) ;
        double res = val / 100 ;
        portefeuille.setText(String.valueOf(res));
    }
    
    private class TitresModel extends DefaultTableModel{
        Class[] types = new Class [] {
            java.lang.Integer.class, java.lang.String.class, java.lang.Double.class
        };
        boolean[] canEdit = new boolean [] {
            false, false, false
        };

        private TitresModel(Object[][] model, String[] string) {
           super(model, string);
        }

        public Class getColumnClass(int columnIndex) {
            return types [columnIndex];
        }
        
        public int getId  (int rowIndex) {
            return (Integer)this.getValueAt(rowIndex, 0);
        }
            
        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    }
    
    private class AlarmesModel extends DefaultTableModel{
        Class[] types = new Class [] {
             java.lang.String.class,java.lang.String.class, java.lang.Double.class
        };
        boolean[] canEdit = new boolean [] {
            false, false, false
        };

        private AlarmesModel(Object[][] model, String[] string) {
           super(model, string);
        }

        public Class getColumnClass(int columnIndex) {
            return types [columnIndex];
        }
            
        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    }

    public void notifie(int idTitre, double nouveauCours) {
       JOptionPane.showMessageDialog(owner, "YES");
    }

    public boolean _is_a(String repositoryIdentifier) {return true ;}

    public boolean _is_equivalent(org.omg.CORBA.Object other) {return true ;}

    public boolean _non_existent() {return true ;}

    public int _hash(int maximum) {return 0 ;}

    public org.omg.CORBA.Object _duplicate() {return null ;}

    public void _release() {}

    public org.omg.CORBA.Object _get_interface_def() {return null ;}

    public Request _request(String operation) {return null ;}

    public Request _create_request(Context ctx, String operation, NVList arg_list, NamedValue result) {return null ;}

    public Request _create_request(Context ctx, String operation, NVList arg_list, NamedValue result, ExceptionList exclist, ContextList ctxlist) {return null ;}

    public Policy _get_policy(int policy_type) {return null ;}

    public DomainManager[] _get_domain_managers() {return null ;}

    public org.omg.CORBA.Object _set_policy_override(Policy[] policies, SetOverrideType set_add) {return null ;}
}
